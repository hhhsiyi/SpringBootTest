<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	   		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	   		http://www.springframework.org/schema/context
	   		http://www.springframework.org/schema/context/spring-context-3.1.xsd
			http://www.springframework.org/schema/mvc
			http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">
    <!-- 读取properties文件 -->
    <context:property-placeholder properties-ref="springProperties" />
<!--    <bean id="springProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean"-->
<!--          p:location="classpath:xmlBatch/spring.properties" />-->
    <bean id="springProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean"
          p:location="classpath:xmlBatch/datasourceNew.properties" />
    <!-- 扫描@Required、@Autowired,、 @PreDestroy、@Resource 等注解，不会扫描@Transactional-->
    <!--<context:annotation-config />-->

    <!-- 扫描@Component, @Repository,@Service,@Controller注解的bean，实例化成spring的bean。已经实现了annotation-config的功能 -->
    <context:component-scan base-package="com.com.hewen.xmlBatch" />

    <import resource="spring-data.xml"/>
    <import resource="spring-batch.xml"/>
    <import resource="spring-batch-job.xml"/>
</beans>